package ${MODULE}
{{$proxy := .}}
/**
 * @author ${AUTHOR}
 * Created on ${DATE}.
 */
type I{{$proxy.TitleName}} interface {
{{range $index, $value := $proxy.Index}}
    /**
     * {{$proxy.GetTitleName $value}}
     *
     * @remark {{$proxy.GetTitleRemark $value}}
     * @return {{$proxy.GetTitleValueFormat $value}}
     */
    Get{{$proxy.GetFieldName $value}}() {{$proxy.GetTitleValueFormat $value}}
{{end}}
}

/**
 * @author ${AUTHOR}
 * Created on ${DATE}.
 */
type {{$proxy.TitleName}} struct {
	//以下为字段定义------------
{{range $index, $value := $proxy.Index}}
    /**
     * {{$proxy.GetTitleName $value}}
     *
     * @remark {{$proxy.GetTitleRemark $value}}
     * @return {{$proxy.GetTitleValueFormat $value}}
     */
    _{{$proxy.GetFieldName $value}}() {{$proxy.GetTitleValueFormat $value}}
{{end}}
}

    //属性接口实现-----------------------
{{range $index, $value := $proxy.Index}}
    /**
     * {{$proxy.GetTitleName $value}}
     *
     * @remark {{$proxy.GetTitleRemark $value}}
     * @return {{$proxy.GetTitleValueFormat $value}}
     */
    _{{$proxy.GetFieldName $value}}() {{$proxy.GetTitleValueFormat $value}}
{{end}}

//解释接口实现-----------------------

func (o *${CLASS}) parseJson(proxy IJsonReaderProxy) {
	//以下为从Json数据中解释出字段数据
${PARSE_JSON_CONTENT}
}

func (o *${CLASS}) parseBinary(proxy IBinaryReaderProxy) {
	//以下为从二进制数据中解释出字段数据
${PARSE_BINARY_CONTENT}
}