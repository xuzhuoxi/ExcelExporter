package {MODULE}{
    import xu.BinaryReaderProxy;
{{$proxy := .}}{{$sheet := $proxy.Sheet}}{{$excel := $proxy.Excel}}{{$ctx := $proxy.TitleCtx}}{{$clsName := $proxy.TitleName}}{{$lang := $proxy.Language}}
    /**
     * @author {AUTHOR}
     * Created on {NowTimeStr} .
     * {{$ctx.RangeName}} {{$ctx.RangeType}} {{$ctx.ProgramLanguage}}
     */
     public class {{$clsName}} {
        // 以下为属性声明
{{range $index, $value := $proxy.Index}}{{$fieldName := $proxy.GetFieldName $value}}{{$langDefine := $proxy.GetTitleLangDefine $value}}
        // {{$proxy.GetTitleName $value}}
        private var _{{ToLowerCamelCase $fieldName}}: {{$langDefine.Name}};{{end}}

        // 以下为Get方法
{{range $index, $value := $proxy.Index}}{{$fieldName := $proxy.GetFieldName $value}}{{$langDefine := $proxy.GetTitleLangDefine $value}}
	    /**
	     * {{$proxy.GetTitleName $value}}
	     *
	     * @remark {{$proxy.GetTitleRemark $value}}
	     * @return {{$langDefine.Name}}
	     */
	    public function get {{ToLowerCamelCase $fieldName}}(): {{$langDefine.Name}} {
	        return this._{{ToLowerCamelCase $fieldName}};
	    }
{{end}}
        // Json数据解释
        public function parseJson(data: Object): void {
            // 以下为从 Json数据代理 中解释出字段数据{{range $index, $value := $proxy.Index}}{{$fieldName := $proxy.GetFieldName $value}}{{$langDefine := $proxy.GetTitleLangDefine $value}}{{$jsonName := $proxy.GetTitleFileKey $value "json"}}
            this._{{ToLowerCamelCase $fieldName}} = {{$langDefine.Name}}(data.{{$jsonName}}); {{end}}
        }

        // 二进制数据解释
        public function parseBinary(proxy: BinaryReaderProxy): void {
            // 以下为从 二进制数据代理 中解释出字段数据{{range $index, $value := $proxy.Index}}{{$fieldName := $proxy.GetFieldName $value}}{{$langDefine := $proxy.GetTitleLangDefine $value}}
            this._{{ToLowerCamelCase $fieldName}} = {{$langDefine.Name}}(proxy.{{$langDefine.GetGetOperate "bin"}}()); {{end}}
        }
     }
}