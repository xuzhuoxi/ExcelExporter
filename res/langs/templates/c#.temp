using System;
using UnityEngine;
{ {{$proxy := .}}{{$sheet := $proxy.Sheet}}{{$excel := $proxy.Excel}}{{$clsName := $proxy.TitleName}}
/**
 * C#定义
 */
namespace {MODULE}
{
    /**
     * @author {AUTHOR}
     * Created on {DATE}.
     */
    [Serializable]
    public class {{$clsName}}
    {
        //以下为属性声明----------------
{{range $index, $value := $proxy.Index}}{{$fieldName := $proxy.GetFieldName $value}}{{$langDefine := $proxy.GetTitleLangDefine $value}}
        // {{$proxy.GetTitleName $value}}
         [SerializeField] private {{$langDefine.Name}} m_{{ToLowerCamelCase $fieldName}};
{{end}}
        //以下为Get方法-----------------
{{range $index, $value := $proxy.Index}}{{$fieldName := $proxy.GetFieldName $value}}{{$langDefine := $proxy.GetTitleLangDefine $value}}
        /**
         * {{$proxy.GetTitleName $value}}
         *
         * @remark {{$proxy.GetTitleRemark $value}}
         * @return {{$langDefine.Name}}
         */
        public{{$langDefine.Name}} {{ToLowerCamelCase $fieldName}} => m_{{ToLowerCamelCase $fieldName}};
{{end}}
        //以下为解释数据方法------------

        public void ParseJson(string data)
        {
            JsonUtility.FromJsonOverwrite(data, this);
        }

//		public void ParseBinary(proxy: xu.BinaryReaderProxy)
//		{   {{range $index, $value := $proxy.Index}}{{$fieldName := $proxy.GetFieldName $value}}{{$langDefine := $proxy.GetTitleLangDefine $value}}
            //this._{{ToLowerCamelCase $fieldName}} = proxy.{{$langDefine.BinaryGet}}();{{end}}
//		}

        // 静态实例化
        public static ${CLASS} FromJson(string data)
        {
            return JsonUtility.FromJson<${CLASS}>(data);
        }
    }
}